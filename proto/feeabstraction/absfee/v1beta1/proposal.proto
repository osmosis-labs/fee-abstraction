syntax = "proto3";
package feeabstraction.absfee.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";

option go_package = "github.com/notional-labs/fee-abstraction/v4/x/feeabs/types";

enum HostChainFeeAbsStatus {
  UPDATED = 0;
  OUTDATED = 1;
  FROZEN = 2;
}

message HostChainFeeAbsConfig {
  // ibc token is allowed to be used as fee token
  string ibc_denom = 1 [ (gogoproto.moretags) = "yaml:\"allowed_token\"" ];
  // token_in in cross_chain swap contract.
  string osmosis_pool_token_denom_in = 2;
  // pool id
  uint64 pool_id = 3;
  // Host chain fee abstraction connection status
  HostChainFeeAbsStatus status = 4;
}

message AddHostZoneProposal {
  option (gogoproto.goproto_getters) = false;
  // the title of the proposal
  string title = 1;
  // the description of the proposal
  string description = 2;
  // the host chain config
  HostChainFeeAbsConfig host_chain_config = 3;
}

message DeleteHostZoneProposal {
  option (gogoproto.goproto_getters) = false;
  // the title of the proposal
  string title = 1;
  // the description of the proposal
  string description = 2;
  // the  ibc denom of this token
  string ibc_denom = 3;
}

message SetHostZoneProposal {
  option (gogoproto.goproto_getters) = false;
  // the title of the proposal
  string title = 1;
  // the description of the proposal
  string description = 2;
  // the host chain config
  HostChainFeeAbsConfig host_chain_config = 3;
}